module Fluent
{
    res = Resource(entry* body, comment? comment)

    entry = Message(iden id, pat? value, attr* attrs, comment? comment)
          | Section(key key, entry* body, comment? comment)
          | Comment(comment)
          | Junk(string body)

    pat = Pattern(expr* elements, bool quoted)

    expr = Selector(sel)
         | SelectExpression(sel? sel, var* vars)

    sel = MessageReference(iden id)
        | ExternalArgument(iden id)
        | CallExpression(iden callee, expr* args)
        | VariantExpression(iden msg, varkey key)
        | AttributeExpression(iden msg, iden id)
        | KeyValueArgument(iden name, argval val)
        | Number(string value)
        | String(string value)

    attr = Attribute(iden id, pat value)
    var = Variant(varkey key, pat value, bool default)
    varkey = Number(string value)
           | Keyword(key name)

    argval = Number(string value)
           | String(string value)
    
    iden = (string name)
    key = (string name)

    comment = (string body)
}
